
public class Calculations {
		
		public static final ATTACK_HIGH = 3;
		public static final ATTACK_MEDIUM = 1.5;
		public static final ATTACK_LOW = 1;
		public static final DEFENSE_HIGH = 3;
		public static final DEFENSE_MEDIUM = 1.5
		public static final DEFENSE_LOW = 1;
		public static final HITPOINTS = 10;
		
		public static final ISLANDS_DISTANCE_WATER_SECONDS = 720;
		
		private int islandOcean1 = 0;	// 0 - 99
		private int islandOcean2 = 0;
		private int islandId1 = 0;		// 0 - 2499
		private int islandId2 = 1;
		
		// Island Coords always formatted as 'XX:YY:ZZ'
			// XX = Ocean Number (00 - 99), 
			// YY = Island Group (00 - 99),
			// ZZ = Island Number within Island Group (00 - 24)
		private String islandCoords1 = "00:00:01";
		private String islandCoords2 = "00:00:02";
		
		private int amountSKatt;
		private int amountBSatt;
		private int amountSPatt;
		private int amountSKdef;
		private int amountBSdef;
		private int amountSPdef;
		private double attBonus = 1.0;
		private double defBonus = 1.0;
		
		private int amountIslandsAtt = 1;
		private int amountIslandsDef = 1;
		
		public calculations(){
		};
		
		//distance between Islands
		private double islandDistance(Island isle1, Island isle2) {
			int oz1 = isle1.getOcean();
			int oz2 = isle2.getOcean();
			
			int id1 = isle1.getId();
			int id2 = isle2.getId();
			
			int dx = 0;
			int dy = 0;
			
			//horizontal part
			if(oz1%10 != oz2%10) {
				dx = 50 - 'betrag'(id1%50 - id2%50);
			} else {
				dx = id1%50 - id2%50;
			}
			
			//vertical part
			if(oz1/10 != oz2/10) {
				dy = 50 - 'betrag'(id1/50 - id2/50);
			} else {
				dy = id1/50 - id2/50;
			}
			
			//total distance via Pythagoras
			double distance = (dx^2 + dy^2)^0.5;
			
			return distance;
		}
		
		public String island_IdToCoords(int isl_OZ, int isl_Id) {
			String isl_Coords = "";
			
			int oz_x = isl_OZ%10;
			int oz_y = isl_OZ/10;
			
			int ig_x = (isl_Id%100)
		}
		
		public int[] island_CoordsToID(String isl_Coords) {
			char[] coords = isl_Coords.toCharArray();
			int oz = Integer.parseInt((String)("coords[0]" + "coords[1]"));
			int ig = Integer.parseInt((String)("coords[3]" + "coords[4]"));
			int in = Integer.parseInt((String)("coords[6]" + "coords[7]"));
			
			int isl_Id_x = ig%10 + in%5;
			int isl_Id_y = ig/10 + in/5;
			
			int isl_ID = isl_Id_x*25 + isl_Id_y;
			int[] isleIDwOZ = new Array(oz, isl_ID);
			
			return isleIDwOZ;
		}
		
		public int shippingDuration(int isl_Id1, int isl_Id2) {
			int duration;
			double distance = islandDistance(isl_Id1, isl_Id2);

			duration = (int)(distance * ISLANDS_DISTANCE_WATER_SECONDS)

			return duration;
		}
		
		
		
	}
